name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write  # ‚Üê allows creating releases and uploading assets

jobs:
  # Create the release
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## üöÄ New Release ${{ github.ref_name }}
            - Built automatically via GitHub Actions.
            - Includes Linux (musl) and Windows x86_64 builds.
            - Thank you for using this project!
          draft: true
          prerelease: false

  # Linux (Alpine / musl)
  build_linux:
    name: Build Linux (musl)
    needs: release
    runs-on: ubuntu-latest
    container:
      image: alpine:3.20

    steps:
      - name: Install dependencies
        run: |
          apk add --no-cache curl gcc musl-dev openssl-dev pkgconfig rust git pcsc-lite-dev pcsc-lite-static

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Build release binary
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-musl/release/nise
          asset_name: nise-linux-musl
          asset_content_type: application/octet-stream

  # Windows (MSVC)
  build_windows:
    name: Build Windows (MSVC)
    needs: release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Build release binary
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-msvc/release/nise.exe
          asset_name: nise.exe
          asset_content_type: application/octet-stream